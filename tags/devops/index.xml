<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DevOps on Daniel Ops</title><link>https://danielchg.github.io/tags/devops/</link><description>Recent content in DevOps on Daniel Ops</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 03 Oct 2023 13:19:23 +0200</lastBuildDate><atom:link href="https://danielchg.github.io/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>How to configure dnsmasq for dual stack ipv4/ipv6</title><link>https://danielchg.github.io/posts/dnsmasq-for-dualstack/</link><pubDate>Tue, 03 Oct 2023 13:19:23 +0200</pubDate><guid>https://danielchg.github.io/posts/dnsmasq-for-dualstack/</guid><description>&lt;h1 id="table-of-contents">Table of Contents&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="#table-of-contents">Table of Contents&lt;/a>&lt;/li>
&lt;li>&lt;a href="#scenario">Scenario&lt;/a>&lt;/li>
&lt;li>&lt;a href="#dnsmasq">Dnsmasq&lt;/a>&lt;/li>
&lt;li>&lt;a href="#installation">Installation&lt;/a>&lt;/li>
&lt;li>&lt;a href="#configuration">Configuration&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#common-config-per-interface">Common config per interface&lt;/a>&lt;/li>
&lt;li>&lt;a href="#dhcp-options-for-ipv4">DHCP options for ipv4&lt;/a>&lt;/li>
&lt;li>&lt;a href="#dhcp-options-for-ipv6">DHCP options for ipv6&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ip-reservation">IP reservation&lt;/a>&lt;/li>
&lt;li>&lt;a href="#dns-resolution-for-dual-stack">DNS resolution for dual stack&lt;/a>&lt;/li>
&lt;li>&lt;a href="#dns-resolution-for-wildcard-subdomains">DNS resolution for wildcard subdomains&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#troubleshooting">Troubleshooting&lt;/a>&lt;/li>
&lt;li>&lt;a href="#summary">Summary&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="scenario">Scenario&lt;/h1>
&lt;p>Nowadays it is more and more common to start working with networks that support ipv6, in order to adapt our environment to the new version of the ip stack. Also we want to keep our ipv4 configuration for legacy applications. In this article I&amp;rsquo;m going to explain how to configure a DHCP and a DNS server to have an environment with support of both ip stacks. This configuration is commonly named dual stack.&lt;/p></description></item><item><title>Create an OCP and OLM mirror with oc-mirror plugin</title><link>https://danielchg.github.io/posts/oc-mirror/</link><pubDate>Mon, 29 Aug 2022 17:44:18 +0200</pubDate><guid>https://danielchg.github.io/posts/oc-mirror/</guid><description>&lt;h1 id="table-of-content">Table of Content&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="#table-of-content">Table of Content&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#context">Context&lt;/a>&lt;/li>
&lt;li>&lt;a href="#oc-mirror-plugin">oc-mirror plugin&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#install">Install&lt;/a>&lt;/li>
&lt;li>&lt;a href="#configure">Configure&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#create-a-mirror">Create a mirror&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#configure-credentials-to-pull-ocp-images">Configure credentials to pull OCP images&lt;/a>&lt;/li>
&lt;li>&lt;a href="#deploy-disconnected-registry">Deploy disconnected registry&lt;/a>&lt;/li>
&lt;li>&lt;a href="#create-mirror-to-file">Create mirror to file&lt;/a>&lt;/li>
&lt;li>&lt;a href="#create-mirror-from-file-to-registry">Create mirror from file to registry&lt;/a>&lt;/li>
&lt;li>&lt;a href="#imagecontentsourcepolicies-objects">ImageContentSourcePolicies objects&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#conclusions">Conclusions&lt;/a>&lt;/li>
&lt;li>&lt;a href="#links">Links&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="context">Context&lt;/h2>
&lt;p>At the moment of this writing, I&amp;rsquo;m working in the Telco 5G area at Red Hat, where we work mostly deploying OCP (OpenShift Container Platform) on bare metal. These deployments are focused on clusters that will be placed in remote locations with no Internet access due to security constraints and/or network designs.&lt;/p></description></item></channel></rss>